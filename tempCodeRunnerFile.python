from db import *
import pytest
import os

@pytest.fixture
def test_db():
    name = "test.db"
    DB_connection.config(name)
    x = DB_connection()
    x.create()
    yield x
    os.remove(name)

def test_singleton(test_db):
    assert DB_connection() is DB_connection()

def test_standard_queries(test_db):
    # as long as it works, it is almost right, checking rightness is in later tests
    test_db.get_history()
    test_db.get_flow()
    test_db.get_wallet()

def test_add_wallet(test_db):
    test_db.add_wallet("USD", 1000)
    wallet = test_db.get_wallet("USD")
    assert wallet == {"USD": 1000}

def test_edit_wallet_add(test_db):
    test_db.add_wallet("USD", 1000)
    test_db.edit_wallet("USD", 500, DB_enums.ADD)
    wallet = test_db.get_wallet("USD")
    assert wallet == {"USD": 1500}

def test_edit_wallet_sub(test_db):
    test_db.add_wallet("USD", 1000)
    test_db.edit_wallet("USD", 300, DB_enums.SUB)
    wallet = test_db.get_wallet("USD")
    assert wallet == {"USD": 700}

def test_get_wallet(test_db):
    test_db.add_wallet("USD", 1000)
    test_db.add_wallet("EUR", 800)
    wallet = test_db.get_wallet()
    expected = {"USD": 1000, "EUR": 800}
    result = {currency: amount for currency, amount in wallet}
    assert result == expected
